{
  "name": "amethyst",
  "author": "Geoxor <geoxor123@outlook.com>",
  "productName": "Amethyst",
  "version": "2.1.5",
  "type": "module",
  "main": "./release/dist/main/main.js",
  "licenses": [
    {
      "type": "MIT",
      "url": "https://raw.githubusercontent.com/Geoxor/amethyst/master/LICENSE"
    }
  ],
  "description": "Amethyst is an Electron-based audio player with a node-based audio routing system, the main goal of this project is to make a music player in Typescript that has pro-level features as most DAWs / DAEs, while also providing useful tools and customizability to the end-user to deal with audio.",
  "scripts": {
    "dev": "rimraf ./release && concurrently -p none \"yarn start:main\" \"yarn start:renderer\" ",
    "dev:android": "yarn build:renderer && concurrently -p none \"yarn start:renderer\" \"yarn cap run android\" ",
    "build": "concurrently -p none \"yarn build:main\" \"yarn build:renderer\" \"yarn gen:all\"",
    "build:main": "tsc -p ./src/main/tsconfig.json",
    "build:renderer": "vite build --config ./src/renderer/vite.config.ts",
    "build:android": "yarn build:renderer && yarn cap sync android && cd ./src/android && ./gradlew wrapper assembleRelease",
    "start:main": "yarn build:main && cross-env NODE_ENV=development electronmon -r ts-node/register/transpile-only ./release/dist/main/main.js",
    "start:renderer": "vite dev --config ./src/renderer/vite.config.ts",
    "package": "rimraf ./release && yarn build && electron-builder build --publish never",
    "package:asarless": "yarn build && electron-builder build --config.asar=false",
    "preinstall": "yarn global add electron-builder",
    "postinstall": "electron-builder install-app-deps && yarn husky",
    "lint": "eslint -c eslint.config.ts --color",
    "lint:fix": "eslint -c eslint.config.ts --color --fix",
    "install:system": "yarn install && yarn test --run && yarn package",
    "install:windows": "yarn install:system && explorer release\\build",
    "test": "vitest",
    "clean": "git reset --hard && git clean -f && rimraf ./release",
    "docs": "cd ./docs && npx mintlify dev",
    "gen:all": "concurrently -p none \"yarn gen:scoop\" \"yarn gen:winget\" \"yarn gen:aur\"",
    "gen:scoop": "yarn tsx ./scripts/generate_scoop_manifest.ts",
    "gen:winget": "yarn tsx ./scripts/generate_winget_manifest.ts",
    "gen:aur": "yarn tsx ./scripts/generate_aur_manifest.ts",
    "gen:locales": "yarn tsx ./scripts/sync_locale_keys.ts",
    "gen:android-icons": "npx @capacitor/assets generate --android --androidProject src/android --iconBackgroundColor '#101119' --iconBackgroundColorDark '#101119' --splashBackgroundColor '#101119' --splashBackgroundColorDark '#101119'",
    "test:browser": "vitest --workspace=vitest.workspace.ts"
  },
  "electronmon": {
    "patterns": [
      "!src/android/**",
      "!src/__tests__/**",
      "!release/**",
      "!**/*.amf",
      "!src/renderer/**",
      "!docs/**"
    ],
    "logLevel": "quiet"
  },
  "lint-staged": {
    "*.{js,vue,ts}": [
      "cross-env NODE_ENV=development eslint --cache"
    ],
    "*.json,.{eslintrc,prettierrc}": [
      "prettier --ignore-path .eslintignore --parser json --write"
    ],
    "*.{css,scss}": [
      "prettier --ignore-path .eslintignore --single-quote --write"
    ],
    "*.{html,md,yml}": [
      "prettier --ignore-path .eslintignore --single-quote --write"
    ]
  },
  "build": {
    "productName": "Amethyst",
    "appId": "org.Amethyst",
    "asar": true,
    "asarUnpack": "**\\*.{node,dll}",
    "fileAssociations": [
      {
        "ext": "ang",
        "icon": "./assets/images/ang.ico",
        "name": "Amethyst Node Graph",
        "description": "Amethyst Node Graph"
      },
      {
        "ext": "acf",
        "icon": "./assets/images/acf.ico",
        "name": "Amethyst Configuration File",
        "description": "Amethyst Configuration File"
      },
      {
        "ext": "amf",
        "icon": "./assets/images/amf.ico",
        "name": "Amethyst Metadata File",
        "description": "Amethyst Metadata File"
      },
      {
        "ext": "ogg",
        "icon": "./assets/images/audio.ico"
      },
      {
        "ext": "ogv",
        "icon": "./assets/images/audio.ico"
      },
      {
        "ext": "oga",
        "icon": "./assets/images/audio.ico"
      },
      {
        "ext": "ogx",
        "icon": "./assets/images/audio.ico"
      },
      {
        "ext": "ogm",
        "icon": "./assets/images/audio.ico"
      },
      {
        "ext": "spx",
        "icon": "./assets/images/audio.ico"
      },
      {
        "ext": "wav",
        "icon": "./assets/images/audio.ico"
      },
      {
        "ext": "wave",
        "icon": "./assets/images/audio.ico"
      },
      {
        "ext": "m4a",
        "icon": "./assets/images/audio.ico"
      },
      {
        "ext": "m4b",
        "icon": "./assets/images/audio.ico"
      },
      {
        "ext": "m4p",
        "icon": "./assets/images/audio.ico"
      },
      {
        "ext": "m4r",
        "icon": "./assets/images/audio.ico"
      },
      {
        "ext": "m4v",
        "icon": "./assets/images/audio.ico"
      },
      {
        "ext": "3gp",
        "icon": "./assets/images/audio.ico"
      },
      {
        "ext": "flac",
        "icon": "./assets/images/audio.ico"
      },
      {
        "ext": "opus",
        "icon": "./assets/images/audio.ico"
      },
      {
        "ext": "aac",
        "icon": "./assets/images/audio.ico"
      },
      {
        "ext": "aiff",
        "icon": "./assets/images/audio.ico"
      },
      {
        "ext": "mp3",
        "icon": "./assets/images/audio.ico"
      },
      {
        "ext": "m4a",
        "icon": "./assets/images/audio.ico"
      }
    ],
    "files": [
      "./release/dist/**/*",
      "!**/*.d.ts"
    ],
    "dmg": {
      "contents": [
        {
          "x": 130,
          "y": 220
        },
        {
          "x": 410,
          "y": 220,
          "type": "link",
          "path": "/Applications"
        }
      ]
    },
    "win": {
      "artifactName": "${productName}-Setup-${version}.${ext}",
      "target": [
        {
          "target": "nsis",
          "arch": [
            "x64"
          ]
        }
      ]
    },
    "linux": {
      "target": [
        {
          "target": "AppImage",
          "arch": [
            "x64",
            "arm64"
          ]
        },
        {
          "target": "deb",
          "arch": [
            "x64",
            "arm64"
          ]
        },
        {
          "target": "snap",
          "arch": [
            "x64"
          ]
        }
      ],
      "asarUnpack": [
        "**/node_modules/sharp/**"
      ],
      "category": "Music",
      "icon": "amethyst.png"
    },
    "deb": {
      "depends": [
        "libvips"
      ]
    },
    "mac": {
      "target": {
        "target": "default",
        "arch": [
          "x64",
          "arm64"
        ]
      },
      "type": "distribution",
      "hardenedRuntime": true,
      "entitlements": "assets/entitlements.mac.plist",
      "entitlementsInherit": "assets/entitlements.mac.plist",
      "gatekeeperAssess": false
    },
    "directories": {
      "output": "release/build",
      "buildResources": "assets"
    },
    "extraResources": [
      "assets/**/*",
      "!assets/**/*.aseprite"
    ],
    "publish": {
      "provider": "github",
      "owner": "Geoxor",
      "repo": "amethyst"
    }
  },
  "repository": {
    "type": "git",
    "url": "git+https://github.com/Geoxor/amethyst"
  },
  "contributors": [
    {
      "name": "George Tsotsos",
      "email": "geoxor123@outlook.com",
      "url": "https://github.com/Geoxor"
    }
  ],
  "license": "MIT",
  "bugs": {
    "url": "https://github.com/Geoxor/amethyst/issues"
  },
  "keywords": [
    "electron",
    "music-player",
    "vue"
  ],
  "homepage": "https://github.com/Geoxor/amethyst#readme",
  "devDependencies": {
    "@babel/types": "^7.27.1",
    "@capacitor/action-sheet": "^7.0.1",
    "@capacitor/android": "^7.2.0",
    "@capacitor/assets": "^3.0.5",
    "@capacitor/cli": "7.2.0",
    "@capacitor/core": "7.2.0",
    "@capacitor/device": "^7.0.1",
    "@capacitor/dialog": "^7.0.1",
    "@capacitor/filesystem": "^7.0.1",
    "@capacitor/haptics": "7.0.1",
    "@capacitor/ios": "^7.2.0",
    "@capacitor/local-notifications": "^7.0.1",
    "@capacitor/splash-screen": "^7.0.1",
    "@capacitor/status-bar": "7.0.1",
    "@capawesome-team/capacitor-file-opener": "^7.0.1",
    "@capawesome/capacitor-file-picker": "^7.0.1",
    "@hugotomazi/capacitor-navigation-bar": "^4.0.1",
    "@intlify/devtools-types": "^11.1.3",
    "@playwright/test": "1.47.2",
    "@types/d3-drag": "^3.0.7",
    "@types/d3-zoom": "^3.0.8",
    "@types/file-saver": "^2.0.7",
    "@types/ip": "^1.1.3",
    "@types/mime-types": "^2.1.4",
    "@types/node": "^22.15.17",
    "@types/pidusage": "^2.0.5",
    "@types/semver": "^7.7.0",
    "@types/sharp": "^0.31.1",
    "@types/source-map-support": "^0.5.6",
    "@types/three": "^0.176.0",
    "@types/uuid": "^10.0.0",
    "@typescript-eslint/eslint-plugin": "^8.32.0",
    "@typescript-eslint/parser": "^8.32.0",
    "@typescript-eslint/utils": "^8.32.0",
    "@unocss/preset-icons": "^66.1.1",
    "@vitejs/plugin-vue": "^5.2.4",
    "@vitest/browser": "^3.1.3",
    "@vue/eslint-config-typescript": "^14.5.0",
    "concurrently": "^9.1.2",
    "cross-env": "^7.0.3",
    "dmg-builder": "^26.0.15",
    "dotenv": "^16.5.0",
    "electron": "^36.2.0",
    "electron-builder": "^26.0.15",
    "electron-builder-squirrel-windows": "^26.0.15",
    "electronmon": "^2.0.3",
    "eslint": "^9.26.0",
    "eslint-config-prettier": "^10.1.5",
    "eslint-import-resolver-alias": "^1.1.2",
    "eslint-plugin-import": "^2.31.0",
    "eslint-plugin-simple-import-sort": "^12.1.1",
    "eslint-plugin-vue": "^10.1.0",
    "globals": "^16.1.0",
    "husky": "^9.1.7",
    "ip": "^2.0.1",
    "jiti": "^2.4.2",
    "move-file-cli": "^3.0.0",
    "playwright": "1.47.2",
    "postcss": "^8.5.3",
    "prettier": "^2.8.8",
    "rimraf": "^6.0.1",
    "tailwindcss": "^3.3.2",
    "ts-node": "^10.9.2",
    "tsx": "^4.19.4",
    "typescript": "^5.8.3",
    "typescript-eslint": "^8.32.0",
    "unocss-preset-colors-rgb": "^1.0.0",
    "vitest": "^3.1.2",
    "vitest-browser-vue": "^0.2.0",
    "vue-tsc": "^1.6.1"
  },
  "dependencies": {
    "@capacitor/app": "7.0.1",
    "@capacitor/keyboard": "7.0.1",
    "@capawesome/capacitor-android-edge-to-edge-support": "^7.2.2",
    "@domchristie/needles": "^0.0.2-1",
    "@floating-ui/core": "^1.2.6",
    "@floating-ui/dom": "^1.2.7",
    "@iconify/vue": "^5.0.0",
    "@intlify/unplugin-vue-i18n": "^1.6.0",
    "@supercharge/promise-pool": "^2.4.0",
    "@types/node-wav": "^0.0.4",
    "@vue-flow/additional-components": "^1.3.3",
    "@vue-flow/core": "^1.19.2",
    "@vueform/slider": "^2.1.9",
    "@vueuse/core": "^10.1.0",
    "audify": "^1.9.0",
    "chalk": "^5.4.1",
    "chokidar": "^4.0.3",
    "current-git-branch": "^2.0.1",
    "electron-is-dev": "2.0.0",
    "electron-log": "^4.4.6",
    "electron-store": "^10.0.1",
    "electron-updater": "^6.6.2",
    "electron-window-state": "^5.0.3",
    "file-saver": "^2.0.5",
    "git-commit-info": "^2.0.2",
    "iso-3166-1": "^2.1.1",
    "iso-639-1": "^3.1.5",
    "js-md5": "^0.8.3",
    "mime-types": "^3.0.1",
    "minimal-discord-rpc": "^1.0.3",
    "mitt": "^3.0.1",
    "music-metadata": "^11.2.1",
    "musicbrainz-api": "^0.25.0",
    "node-vibrant": "^4.0.3",
    "node-wav": "^0.0.2",
    "open": "^10.1.2",
    "pidusage": "^4.0.1",
    "pretty-ms": "^9.2.0",
    "sharp": "^0.31.3",
    "subsonic-api": "^3.1.2",
    "systeminformation": "^5.25.11",
    "three": "^0.176.0",
    "unocss": "^66.1.1",
    "uuid": "^11.1.0",
    "vite": "^6.3.5",
    "vite-plugin-node-polyfills": "^0.23.0",
    "vue": "^3.5.13",
    "vue-eslint-parser": "^10.1.3",
    "vue-i18n": "^11.1.3",
    "vue-router": "^4.5.1",
    "vue-virtual-scroller": "^2.0.0-beta.8"
  },
  "devEngines": {
    "node": ">=18",
    "npm": ">=8.x",
    "yarn": ">=1.22.x"
  },
  "packageManager": "yarn@1.22.22+sha512.a6b2f7906b721bba3d67d4aff083df04dad64c399707841b7acf00f6b133b7ac24255f2652fa22ae3534329dc6180534e98d17432037ff6fd140556e2bb3137e"
}
